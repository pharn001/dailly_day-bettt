# Generated by Django 5.1.1 on 2024-09-13 07:01

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_remove_blogpost_color_remove_blogpost_model'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='blogpost',
            name='content',
        ),
        migrations.RemoveField(
            model_name='blogpost',
            name='published_date',
        ),
        migrations.RemoveField(
            model_name='blogpost',
            name='title',
        ),
        migrations.AddField(
            model_name='blogpost',
            name='Last_name',
            field=models.EmailField(default=django.utils.timezone.now, max_length=255, verbose_name='Email Address'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='blogpost',
            name='date_joined',
            field=models.DateTimeField(auto_now_add=True, default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='blogpost',
            name='email',
            field=models.EmailField(default=1, max_length=255, unique=True, verbose_name='Email Address'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='blogpost',
            name='first_name',
            field=models.EmailField(default=1, max_length=255, verbose_name='Email Address'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='blogpost',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='is_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='is_superuser',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='last_login',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='password',
            field=models.CharField(default=1, max_length=128, verbose_name='password'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='blogpost',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
